use super::{QueryLine, Comparator};
use data::{ColumnName};

#[pub]
query -> Vec<QueryLine>
  = (select / where) ++ "\n"

select -> QueryLine
  = __ "s " __ e:select_entries __ { QueryLine::Select(e) }

select_entries -> Vec<ColumnName>
  = identifier ++ ","

where -> QueryLine
  = __ "w " left:identifier "=" right:identifier  { QueryLine::Where(left, Comparator::Equal, right) }
  / __ "w " left:identifier ">" right:identifier  { QueryLine::Where(left, Comparator::Greater, right) }
  / __ "w " left:identifier "<" right:identifier  { QueryLine::Where(left, Comparator::Less, right) }
  / __ "w " left:identifier ">=" right:identifier { QueryLine::Where(left, Comparator::GreaterOrEqual, right) }
  / __ "w " left:identifier "<=" right:identifier { QueryLine::Where(left, Comparator::LessOrEqual, right) }

identifier -> ColumnName
  = __ t:string "." n:string __ { ColumnName::new(t, n) }

string -> String
  = [a-zA-Z0-9]+ { match_str.to_owned() }

__ = " "*
